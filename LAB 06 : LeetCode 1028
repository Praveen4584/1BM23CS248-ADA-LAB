#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct treeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
};

struct TreeNode* createNode(int val) {
    struct TreeNode* node = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    node->val = val;
    node->left = NULL;
    node->right = NULL;
    return node;
}

struct TreeNode* recoverFromPreorder(char* traversal) {
    struct TreeNode* stack[1000];
    int stackTop = -1; 

    int i = 0;
    int n = strlen(traversal);
    
    while (i < n) {
        int depth = 0;
        while (i < n && traversal[i] == '-') {
            depth++;
            i++;
        }

        int val = 0;
        while (i < n && traversal[i] >= '0' && traversal[i] <= '9') {
            val = val * 10 + (traversal[i] - '0');
            i++;
        }

        struct TreeNode* node = createNode(val);

        while (stackTop >= depth) {
            stackTop--;
        }

        if (stackTop >= 0) {
            if (stack[stackTop]->left == NULL) {
                stack[stackTop]->left = node;
            } else {
                stack[stackTop]->right = node; 
            }
        }

        stack[++stackTop] = node;
    }

    return stack[0];
}

