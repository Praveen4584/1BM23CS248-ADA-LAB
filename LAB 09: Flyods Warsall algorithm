#include <stdio.h>
#define INF 99999

void floydWarshall(int graph[][4], int num_vertices) {
    int dist[num_vertices][num_vertices];

    for (int i = 0; i < num_vertices; i++) {
        for (int j = 0; j < num_vertices; j++) {
            if (graph[i][j] == 0 && i != j) {
                dist[i][j] = INF;
            } else {
                dist[i][j] = graph[i][j];
            }
        }
    }

    for (int k = 0; k < num_vertices; k++) {
        for (int i = 0; i < num_vertices; i++) {
            for (int j = 0; j < num_vertices; j++) {
                if (dist[i][j] > dist[i][k] + dist[k][j]) {
                    dist[i][j] = dist[i][k] + dist[k][j];
                }
            }
        }
    }

    printf("The shortest distances between every pair of vertices are:\n");
    for (int i = 0; i < num_vertices; i++) {
        for (int j = 0; j < num_vertices; j++) {
            if (dist[i][j] == INF) {
                printf("%7s ", "INF");
            } else {
                printf("%7d ", dist[i][j]);
            }
        }
        printf("\n");
    }
}

int main() {
    int num_vertices = 4;

    int graph[4][4] = {
        {0, 3, 2, 0},
        {0, 0, 1, 0},
        {3, 0, 0, 7},
        {0, 5, 0, 0}
    };

    floydWarshall(graph, num_vertices);

    return 0;
}
